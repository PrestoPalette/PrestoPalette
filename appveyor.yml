environment:
  matrix:
#    - job_name: Windows-VS2017
#      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017

#    - job_name: Windows-VS2019
#      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019

#    - job_name: Linux
#      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu

    - job_name: macOS
      APPVEYOR_BUILD_WORKER_IMAGE: macos

matrix:
  fast_finish: true

for:

# ======================================
#      Windows - VS2017
# ======================================

-
  matrix:
    only:
    - job_name: Windows-VS2017

  init:
  - echo "Init for Windows"
  - set QTDIR=C:\Qt\5.10.1\msvc2017_64
  - set PATH=%QTDIR%\bin;%PATH%;
  - set PATH=C:\Program Files (x86)\Inno Setup 5;%PATH%;
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"

  build_script:
  - echo "Build for Windows"
  - call scripts\build_windows.bat

  test: off

  artifacts:
  - path: installer\*.exe
    name: windows-vs2017-prestopalette-installer

# ======================================
#      Windows - VS2019
# ======================================

-
  matrix:
    only:
    - job_name: Windows-VS2019

  init:
  - echo "Init for Windows"
  - set QTDIR=C:\Qt\5.15.2\msvc2019_64
  - set PATH=%QTDIR%\bin;%PATH%;
  - set PATH=C:\Program Files (x86)\Inno Setup 6;%PATH%;
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"

  build_script:
  - echo "Build for Windows"
  - call scripts\build_windows.bat

  test: off

  artifacts:
  - path: installer\*.exe
    name: windows-vs2019-prestopalette-installer

# ======================================
#      Linux
# ======================================

-
  matrix:
    only:
    - job_name: Linux

  init:
  - echo "Init for Linux"

  install:
  - echo "Install for Linux"
  - sh: sudo ./scripts/setup_ubuntu.sh

  build_script:
  - echo "Build for Linux"
  - ./scripts/build_qmake.sh
  - find .

  test: off

# ======================================
#      macOS
# ======================================

-
  matrix:
    only:
    - job_name: macOS

  init:
  - echo "Init for macOS"
  - export QTDIR=$HOME/Qt/5.15/clang_64
  - export PATH=$QTDIR/bin:$PATH

  install:
  - echo "Install for macOS"
  - sh: brew install pngcrush

  build_script:
  - echo "Build for macOS"
  - cmake -Bbuild .
  - ./scripts/build_qmake.sh
  - echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
  - psw=`cat /usr/local/var/appveyor/build-agent/psw`
  - security create-keychain -p "$psw" build.keychain
  - security default-keychain -s build.keychain
  - security unlock-keychain -p "$psw" build.keychain
  - security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
  - 'security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$psw" build.keychain'
  - security find-identity -v
  - /usr/bin/codesign --force --sign 'Developer ID Application: Saggio Technologies LLC (77QR77825Z)' ./build/release/ -v
  #- /usr/bin/codesign --force -s "64E50FB8FE487F18D7793B126068D156DEAD6C65" ./build/release/ -v





  test: off

  artifacts:
  - path: build/release/
    name: osx-prestopalette-release

  - path: build/debug/
    name: osx-prestopalette-debug
